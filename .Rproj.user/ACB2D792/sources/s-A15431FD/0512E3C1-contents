###############################################################

###############################################################

# Cardoso, P., Fukushima, C.S. & Mammola, S. (subm.) Quantifying the international collaboration of researchers and research institutions.

## ------------------------------------------------------------------------
# 'R script to reproduce the analyses'
## ------------------------------------------------------------------------

# Analysis performed with R (v. R 4.1.0) and R studio (v. 1.4.1103)
# Authors (code): Stefano Mammola

# clean the workspace -----------------------------------------------------

rm(list = ls())

# Packages ----------------------------------------------------------------

library("ggpubr")
library("ggplot2")
library("graphics")
library("PupillometryR") # A Unified Pipeline for Pupillometry Data 
library("RAT")
library("stats")
library("utils")
library("tidyverse")

# Load data ---------------------------------------------------------------

load("Data/map.rda")
load("Data/authors_extracted.rda")

# Checking data -----------------------------------------------------------

db <- authors ; rm(authors) ; str(db) #rename and check db
db$area <- as.factor(as.character(db$area)) #convert as factor

levels(db$area)[3] <- "particle physics" #rename
db <- na.omit(db) # omit missing data

db <- db %>% mutate_if(is.numeric, function(x) ifelse(is.infinite(x), 0, x)) #replace infinite

#Log transform
db$i_index_l     <- log(db$i_index+1)
db$h_index_l     <- log(db$h_index+1)
db$i_index_GDP_l <- log(db$i_index_GDP+1)
db$i_index_h_l     <- log(db$i_index_h+1)

#correlation?
as.numeric(round(cor.test(db$i_index, db$h_index)$estimate, 4))
as.numeric(round(cor.test(db$i_index_l, db$h_index_l)$estimate, 4))

as.numeric(round(cor.test(db$i_index_GDP, db$h_index)$estimate, 4))
as.numeric(round(cor.test(db$i_index_GDP_l, db$h_index_l)$estimate, 4))

as.numeric(round(cor.test(db$i_index, db$i_index_h)$estimate, 4))
as.numeric(round(cor.test(db$i_index_l, db$i_index_h_l)$estimate, 4))

# Plotting h-index vs i-index ---------------------------------------------

cor_exp <- expression(paste("Pearson's ",
                            italic("r"),
                            " = 0.79"))

cor_exp2 <- expression(paste("Pearson's ",
                            italic("r"),
                            " = 0.75"))
#set color
COL <- c("chartreuse3","blue","black","purple")

#plot
(plot_A <- ggplot(db, aes(y = jitter(i_index_l), x = jitter(h_index_l))) +
    geom_smooth(
      method = lm,
      se = FALSE,
      col = "grey30",
      size = 1,
      alpha = 1
    ) +
    geom_point(
      aes(color = area, size = academic_age),
      alpha = 0.4,
    ) +
    scale_color_manual(values=COL)+
    #scale_size_manual("Academic age", values = c(1,2,4))+
    annotate(
      geom = "text",
      x = 0.7,
      y = 2.2,
      size = 4,
      label = cor_exp,
      color = "black",
      fontface = "bold"
    ) +
    theme_bw() + labs(
      title = NULL,
      color = "Discipline",
      size = "Academic age\n[years]",
      x = NULL,
      y = "i-index [log-transformed]"
    ) + theme(
      legend.position = "none",
      legend.background = element_blank(),
      legend.title =  element_text(size = 12, face = "bold"),
      legend.text = element_text(size = 10),
      plot.title = element_text(color="black", size=14, face="bold"),
      axis.title = element_text(size = 12),
      axis.text.x = element_blank(),
      axis.text.y = element_text(size = 11),
      axis.ticks.length=unit(-0.15, "cm"),
      panel.grid = element_blank(),
      plot.caption = element_text(size = 10, color = "gray30")
    )
)

db <- data.frame(db, dev = residuals(lm(i_index_l ~ h_index_l, data = db)))

(plot_B <- 
    ggplot(data = db,
           aes(x = area, y = dev, fill = area, color = area)) +
    geom_flat_violin(aes(fill = area), col = "white",position = position_nudge(x = 0.2, y = 0), alpha = 0.4) +
    geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.4, fill = "white") +
    geom_point(aes(y = dev, color = area, size = academic_age), 
               position = position_jitter(width = 0.15), alpha = 0.4) +
   
    labs(title = NULL, x = NULL, y= "Deviation from the line (Plot A)") +
    geom_hline(yintercept=0, col = "grey30", linetype = "dotted")+
    guides(fill = FALSE, color = FALSE) +
    scale_fill_manual(values =  COL) +
    scale_colour_manual(values = COL) +
    theme_bw() +
    theme(
      legend.position = "none",
      legend.title = element_text(size = 12, face = "bold"),
      legend.text = element_text(size = 12),
      plot.title = element_text(color="black", size=14, face="bold"),
      axis.title = element_text(size = 12),
      axis.text.x = element_blank(),
      axis.text.y = element_text(size = 11),
      axis.ticks.length=unit(-0.15, "cm"),
      panel.grid = element_blank(),
      plot.caption = element_text(size = 10, color = "gray30")
    )
  
)

(plot_C <- ggplot(db, aes(y = jitter(i_index_GDP_l), x = jitter(h_index_l))) +
    geom_smooth(
      method = lm,
      se = FALSE,
      col = "grey30",
      size = 1,
      alpha = 1
    ) +
    geom_point(
      aes(color = area, size = academic_age),
      alpha = 0.4,
    ) +
    scale_color_manual(values=COL)+
    #scale_size_manual("Academic age", values = c(1,2,4))+
    annotate(
      geom = "text",
      x = 0.7,
      y = 1.5,
      size = 4,
      label = cor_exp2,
      color = "black",
      fontface = "bold"
    ) +
    theme_bw() + labs(
      title = NULL,
      color = "Discipline",
      size = "Academic age\n[years]",
      x = "h-index [log-transformed]",
      y = "weighted i-index [log-transformed]"
    ) + theme(
      legend.position = "none",
      legend.background = element_blank(),
      legend.title =  element_text(size = 12, face = "bold"),
      legend.text = element_text(size = 10),
      plot.title = element_text(color="black", size=14, face="bold"),
      axis.title = element_text(size = 12),
      axis.text.x = element_text(size = 11),
      axis.text.y = element_text(size = 11),
      axis.ticks.length=unit(-0.15, "cm"),
      panel.grid = element_blank(),
      plot.caption = element_text(size = 10, color = "gray30")
    )
)

db <- data.frame(db, dev2 = residuals(lm(i_index_GDP_l ~ h_index_l, data = db)))

(plot_D <- 
    ggplot(data = db,
           aes(x = area, y = dev2, fill = area, color = area)) +
    geom_flat_violin(aes(fill = area), col = "white",position = position_nudge(x = 0.2, y = 0), alpha = 0.4) +
    geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.4, fill = "white") +
    geom_point(aes(y = dev, color = area, size = academic_age), 
               position = position_jitter(width = 0.15), alpha = 0.4) +
    
    labs(title = NULL, x = "Discipline", y= "Deviation from the line (Plot C)") +
    geom_hline(yintercept=0, col = "grey30", linetype = "dotted")+
    guides(fill = FALSE, color = FALSE) +
    scale_fill_manual(values =  COL) +
    scale_colour_manual(values = COL) +
    theme_bw() +
    theme(
      legend.position = "none",
      legend.title = element_text(size = 12, face = "bold"),
      legend.text = element_text(size = 12),
      plot.title = element_text(color="black", size=14, face="bold"),
      axis.title = element_text(size = 12),
      axis.text.x = element_text(size = 11),
      axis.text.y = element_text(size = 11),
      axis.ticks.length=unit(-0.15, "cm"),
      panel.grid = element_blank(),
      plot.caption = element_text(size = 10, color = "gray30")
    )
  
)

pdf(file = "Figure/Figure_2.pdf", width = 12, height = 8)

ggpubr::ggarrange(
  plot_A,
  plot_B,
  plot_C,
  plot_D,
  labels = c("A", "B", "C", "D"),
  nrow = 2,
  ncol = 2,
  align = "hv",
  legend= "right",
  common.legend = TRUE
)

dev.off()
